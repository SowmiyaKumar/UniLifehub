{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\RMIT Hackathon\\\\UniLifehub\\\\frontend\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledForm = styled.form`\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 1rem;\n  background-color: #f9fafb;\n  border-radius: 0.5rem;\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n\n  h2 {\n    font-size: 1.5rem;\n    font-weight: 700;\n    margin-bottom: 1rem;\n    color: #1f2937;\n    text-align: center;\n  }\n\n  input {\n    width: 100%;\n    height: 38px;\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    border: 1px solid #d1d5db;\n    border-radius: 0.375rem;\n    font-size: 1rem;\n    background-color: #fff;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n    &:focus {\n      outline: none;\n      border-color: #3b82f6;\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\n    }\n  }\n\n  button {\n    width: 100%;\n    background-color: #3b82f6;\n    color: white;\n    padding: 0.75rem 1rem;\n    border-radius: 0.375rem;\n    font-weight: 600;\n    font-size: 1rem;\n    border: none;\n    cursor: pointer;\n    transition: background-color 0.15s ease-in-out;\n\n    &:hover {\n      background-color: #2563eb;\n    }\n\n    &:focus {\n      outline: none;\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);\n    }\n  }\n\n  .success {\n    color: green;\n    text-align: center;\n    margin-top: 1rem;\n  }\n\n  .error {\n    color: red;\n    text-align: center;\n    margin-top: 1rem;\n  }\n`;\n_c = StyledForm;\nconst SignUpForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    studentName: '',\n    studentId: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [message, setMessage] = useState(null);\n  const navigate = useNavigate(); // Use for navigation after signup\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      studentId,\n      password,\n      confirmPassword\n    } = formData;\n\n    // Check if the student ID starts with 's'\n    if (!studentId.startsWith('s')) {\n      setMessage('Sign up failed: Student ID must start with \"s\".');\n      return;\n    }\n\n    // Check if the passwords match\n    if (password !== confirmPassword) {\n      setMessage('Sign up failed: Passwords do not match.');\n      return;\n    }\n\n    // If all validations pass\n    setMessage('Sign up successful!');\n\n    // Simulate a successful signup by redirecting to login page after a delay\n    setTimeout(() => {\n      // If everything is valid, redirect to Profile Creation\n      navigate('/profile-creation');\n    }, 1000); // Redirect after 1 second\n  };\n  return /*#__PURE__*/_jsxDEV(StyledForm, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"studentName\",\n      value: formData.studentName,\n      onChange: handleChange,\n      placeholder: \"Full Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"studentId\",\n      value: formData.studentId,\n      onChange: handleChange,\n      placeholder: \"Student ID\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      placeholder: \"Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: formData.confirmPassword,\n      onChange: handleChange,\n      placeholder: \"Confirm Password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: message.includes('failed') ? 'error' : 'success',\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUpForm, \"QbuTQGfQZ6sqlk+N987d7xKLydM=\", false, function () {\n  return [useNavigate];\n});\n_c2 = SignUpForm;\nexport default SignUpForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledForm\");\n$RefreshReg$(_c2, \"SignUpForm\");","map":{"version":3,"names":["React","useState","styled","useNavigate","jsxDEV","_jsxDEV","StyledForm","form","_c","SignUpForm","_s","formData","setFormData","studentName","studentId","password","confirmPassword","message","setMessage","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","startsWith","setTimeout","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","required","className","includes","_c2","$RefreshReg$"],"sources":["E:/Uni/RMIT Hackathon/UniLifehub/frontend/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst StyledForm = styled.form`\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 1rem;\r\n  background-color: #f9fafb;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-bottom: 1rem;\r\n    color: #1f2937;\r\n    text-align: center;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 38px;\r\n    padding: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    border: 1px solid #d1d5db;\r\n    border-radius: 0.375rem;\r\n    font-size: 1rem;\r\n    background-color: #fff;\r\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border-color: #3b82f6;\r\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.3);\r\n    }\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    background-color: #3b82f6;\r\n    color: white;\r\n    padding: 0.75rem 1rem;\r\n    border-radius: 0.375rem;\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n    border: none;\r\n    cursor: pointer;\r\n    transition: background-color 0.15s ease-in-out;\r\n\r\n    &:hover {\r\n      background-color: #2563eb;\r\n    }\r\n\r\n    &:focus {\r\n      outline: none;\r\n      box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.5);\r\n    }\r\n  }\r\n\r\n  .success {\r\n    color: green;\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n  }\r\n\r\n  .error {\r\n    color: red;\r\n    text-align: center;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst SignUpForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    studentName: '',\r\n    studentId: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const navigate = useNavigate(); // Use for navigation after signup\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { studentId, password, confirmPassword } = formData;\r\n\r\n    // Check if the student ID starts with 's'\r\n    if (!studentId.startsWith('s')) {\r\n      setMessage('Sign up failed: Student ID must start with \"s\".');\r\n      return;\r\n    }\r\n\r\n    // Check if the passwords match\r\n    if (password !== confirmPassword) {\r\n      setMessage('Sign up failed: Passwords do not match.');\r\n      return;\r\n    }\r\n\r\n    // If all validations pass\r\n    setMessage('Sign up successful!');\r\n\r\n    // Simulate a successful signup by redirecting to login page after a delay\r\n    setTimeout(() => {\r\n      // If everything is valid, redirect to Profile Creation\r\n      navigate('/profile-creation');\r\n    }, 1000); // Redirect after 1 second\r\n  };\r\n\r\n  return (\r\n    <StyledForm onSubmit={handleSubmit}>\r\n      <h2>Student Sign Up</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"studentName\"\r\n        value={formData.studentName}\r\n        onChange={handleChange}\r\n        placeholder=\"Full Name\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"studentId\"\r\n        value={formData.studentId}\r\n        onChange={handleChange}\r\n        placeholder=\"Student ID\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        placeholder=\"Password\"\r\n        required\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"confirmPassword\"\r\n        value={formData.confirmPassword}\r\n        onChange={handleChange}\r\n        placeholder=\"Confirm Password\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Sign Up</button>\r\n      {message && (\r\n        <div className={message.includes('failed') ? 'error' : 'success'}>\r\n          {message}\r\n        </div>\r\n      )}\r\n    </StyledForm>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}