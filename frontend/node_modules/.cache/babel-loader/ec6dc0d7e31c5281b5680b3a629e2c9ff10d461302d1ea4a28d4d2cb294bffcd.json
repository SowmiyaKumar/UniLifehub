{"ast":null,"code":"var _jsxFileName = \"E:\\\\Uni\\\\Hackathon\\\\UniLifehub\\\\frontend\\\\src\\\\components\\\\StarfieldBackground.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarfieldBackground = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Create stars\n    const starsGeometry = new THREE.BufferGeometry();\n    const starsMaterial = new THREE.PointsMaterial({\n      color: 0xFFFFFF\n    });\n    const starsVertices = [];\n    for (let i = 0; i < 10000; i++) {\n      const x = (Math.random() - 0.5) * 2000;\n      const y = (Math.random() - 0.5) * 2000;\n      const z = (Math.random() - 0.5) * 2000;\n      starsVertices.push(x, y, z);\n    }\n    starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\n    scene.add(stars);\n    camera.position.z = 1000;\n\n    // Animation\n    const animate = () => {\n      requestAnimationFrame(animate);\n      stars.rotation.y += 0.0002;\n\n      // Make stars fall\n      const positions = stars.geometry.attributes.position.array;\n      for (let i = 1; i < positions.length; i += 3) {\n        positions[i] -= 0.1 + Math.random() * 0.1;\n        if (positions[i] < -1000) {\n          positions[i] = 1000;\n        }\n      }\n      stars.geometry.attributes.position.needsUpdate = true;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n_s(StarfieldBackground, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = StarfieldBackground;\nexport default StarfieldBackground;\nvar _c;\n$RefreshReg$(_c, \"StarfieldBackground\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","StarfieldBackground","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","starsGeometry","BufferGeometry","starsMaterial","PointsMaterial","color","starsVertices","i","x","Math","random","y","z","push","setAttribute","Float32BufferAttribute","stars","Points","add","position","animate","requestAnimationFrame","rotation","positions","geometry","attributes","array","length","needsUpdate","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","removeChild","ref","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Uni/Hackathon/UniLifehub/frontend/src/components/StarfieldBackground.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst StarfieldBackground = () => {\r\n  const mountRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    mountRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create stars\r\n    const starsGeometry = new THREE.BufferGeometry();\r\n    const starsMaterial = new THREE.PointsMaterial({ color: 0xFFFFFF });\r\n\r\n    const starsVertices = [];\r\n    for (let i = 0; i < 10000; i++) {\r\n      const x = (Math.random() - 0.5) * 2000;\r\n      const y = (Math.random() - 0.5) * 2000;\r\n      const z = (Math.random() - 0.5) * 2000;\r\n      starsVertices.push(x, y, z);\r\n    }\r\n\r\n    starsGeometry.setAttribute('position', new THREE.Float32BufferAttribute(starsVertices, 3));\r\n    const stars = new THREE.Points(starsGeometry, starsMaterial);\r\n    scene.add(stars);\r\n\r\n    camera.position.z = 1000;\r\n\r\n    // Animation\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n\r\n      stars.rotation.y += 0.0002;\r\n\r\n      // Make stars fall\r\n      const positions = stars.geometry.attributes.position.array;\r\n      for (let i = 1; i < positions.length; i += 3) {\r\n        positions[i] -= 0.1 + Math.random() * 0.1;\r\n        if (positions[i] < -1000) {\r\n          positions[i] = 1000;\r\n        }\r\n      }\r\n      stars.geometry.attributes.position.needsUpdate = true;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Handle window resize\r\n    const handleResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      mountRef.current.removeChild(renderer.domElement);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={mountRef} style={{ position: 'fixed', top: 0, left: 0, zIndex: -1 }} />;\r\n};\r\n\r\nexport default StarfieldBackground;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}